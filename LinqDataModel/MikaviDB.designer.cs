#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqDataModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Mikavi")]
	public partial class MikaviDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertPromet(Promet instance);
    partial void UpdatePromet(Promet instance);
    partial void DeletePromet(Promet instance);
    #endregion
		
		public MikaviDBDataContext() : 
				base(global::LinqDataModel.Properties.Settings.Default.MyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MikaviDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MikaviDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MikaviDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MikaviDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Promet> Promets
		{
			get
			{
				return this.GetTable<Promet>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddPromet")]
		public int AddPromet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerId", DbType="Int")] System.Nullable<int> customerId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Int")] System.Nullable<int> quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Money")] System.Nullable<decimal> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comment", DbType="NVarChar(1)")] string comment)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerId, productId, quantity, price, comment);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPromet")]
		public ISingleResult<GetPrometResult> GetPromet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
			return ((ISingleResult<GetPrometResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddArticle")]
		public int AddArticle([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PLU", DbType="Int")] System.Nullable<int> pLU, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Decimal(8,2)")] System.Nullable<decimal> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Bar_code", DbType="VarChar(13)")] string bar_code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Stock", DbType="Decimal(8,2)")] System.Nullable<decimal> stock)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pLU, name, price, bar_code, stock);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetArticles")]
		public ISingleResult<GetArticlesResult> GetArticles([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PLU", DbType="Int")] System.Nullable<int> pLU, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Bar_code", DbType="VarChar(13)")] string bar_code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalArticles", DbType="Int")] ref System.Nullable<int> totalArticles, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArticlesWithStock", DbType="Int")] ref System.Nullable<int> articlesWithStock, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CumulativeAmount", DbType="Decimal(8,2)")] ref System.Nullable<decimal> cumulativeAmount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pLU, name, bar_code, totalArticles, articlesWithStock, cumulativeAmount);
			totalArticles = ((System.Nullable<int>)(result.GetParameterValue(3)));
			articlesWithStock = ((System.Nullable<int>)(result.GetParameterValue(4)));
			cumulativeAmount = ((System.Nullable<decimal>)(result.GetParameterValue(5)));
			return ((ISingleResult<GetArticlesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _PLU;
		
		private string _Name;
		
		private System.Nullable<decimal> _Price;
		
		private string _Column_3;
		
		private string _Column_4;
		
		private string _Column_5;
		
		private string _Column_6;
		
		private string _Column_7;
		
		private string _Column_8;
		
		private string _Column_9;
		
		private string _Column_10;
		
		private string _Column_11;
		
		private string _Column_12;
		
		private string _Column_13;
		
		private string _Bar_code;
		
		private string _Stock;
		
		private string _Column_16;
		
		private System.Nullable<System.DateTime> _Updated;
		
		private EntitySet<Promet> _Promets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPLUChanging(short value);
    partial void OnPLUChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnColumn_3Changing(string value);
    partial void OnColumn_3Changed();
    partial void OnColumn_4Changing(string value);
    partial void OnColumn_4Changed();
    partial void OnColumn_5Changing(string value);
    partial void OnColumn_5Changed();
    partial void OnColumn_6Changing(string value);
    partial void OnColumn_6Changed();
    partial void OnColumn_7Changing(string value);
    partial void OnColumn_7Changed();
    partial void OnColumn_8Changing(string value);
    partial void OnColumn_8Changed();
    partial void OnColumn_9Changing(string value);
    partial void OnColumn_9Changed();
    partial void OnColumn_10Changing(string value);
    partial void OnColumn_10Changed();
    partial void OnColumn_11Changing(string value);
    partial void OnColumn_11Changed();
    partial void OnColumn_12Changing(string value);
    partial void OnColumn_12Changed();
    partial void OnColumn_13Changing(string value);
    partial void OnColumn_13Changed();
    partial void OnBar_codeChanging(string value);
    partial void OnBar_codeChanged();
    partial void OnStockChanging(string value);
    partial void OnStockChanged();
    partial void OnColumn_16Changing(string value);
    partial void OnColumn_16Changed();
    partial void OnUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedChanged();
    #endregion
		
		public Article()
		{
			this._Promets = new EntitySet<Promet>(new Action<Promet>(this.attach_Promets), new Action<Promet>(this.detach_Promets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLU", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short PLU
		{
			get
			{
				return this._PLU;
			}
			set
			{
				if ((this._PLU != value))
				{
					this.OnPLUChanging(value);
					this.SendPropertyChanging();
					this._PLU = value;
					this.SendPropertyChanged("PLU");
					this.OnPLUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(14)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 3]", Storage="_Column_3", DbType="VarChar(1)")]
		public string Column_3
		{
			get
			{
				return this._Column_3;
			}
			set
			{
				if ((this._Column_3 != value))
				{
					this.OnColumn_3Changing(value);
					this.SendPropertyChanging();
					this._Column_3 = value;
					this.SendPropertyChanged("Column_3");
					this.OnColumn_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 4]", Storage="_Column_4", DbType="VarChar(1)")]
		public string Column_4
		{
			get
			{
				return this._Column_4;
			}
			set
			{
				if ((this._Column_4 != value))
				{
					this.OnColumn_4Changing(value);
					this.SendPropertyChanging();
					this._Column_4 = value;
					this.SendPropertyChanged("Column_4");
					this.OnColumn_4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 5]", Storage="_Column_5", DbType="VarChar(1)")]
		public string Column_5
		{
			get
			{
				return this._Column_5;
			}
			set
			{
				if ((this._Column_5 != value))
				{
					this.OnColumn_5Changing(value);
					this.SendPropertyChanging();
					this._Column_5 = value;
					this.SendPropertyChanged("Column_5");
					this.OnColumn_5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 6]", Storage="_Column_6", DbType="VarChar(1)")]
		public string Column_6
		{
			get
			{
				return this._Column_6;
			}
			set
			{
				if ((this._Column_6 != value))
				{
					this.OnColumn_6Changing(value);
					this.SendPropertyChanging();
					this._Column_6 = value;
					this.SendPropertyChanged("Column_6");
					this.OnColumn_6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 7]", Storage="_Column_7", DbType="VarChar(1)")]
		public string Column_7
		{
			get
			{
				return this._Column_7;
			}
			set
			{
				if ((this._Column_7 != value))
				{
					this.OnColumn_7Changing(value);
					this.SendPropertyChanging();
					this._Column_7 = value;
					this.SendPropertyChanged("Column_7");
					this.OnColumn_7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 8]", Storage="_Column_8", DbType="VarChar(1)")]
		public string Column_8
		{
			get
			{
				return this._Column_8;
			}
			set
			{
				if ((this._Column_8 != value))
				{
					this.OnColumn_8Changing(value);
					this.SendPropertyChanging();
					this._Column_8 = value;
					this.SendPropertyChanged("Column_8");
					this.OnColumn_8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 9]", Storage="_Column_9", DbType="VarChar(1)")]
		public string Column_9
		{
			get
			{
				return this._Column_9;
			}
			set
			{
				if ((this._Column_9 != value))
				{
					this.OnColumn_9Changing(value);
					this.SendPropertyChanging();
					this._Column_9 = value;
					this.SendPropertyChanged("Column_9");
					this.OnColumn_9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 10]", Storage="_Column_10", DbType="VarChar(1)")]
		public string Column_10
		{
			get
			{
				return this._Column_10;
			}
			set
			{
				if ((this._Column_10 != value))
				{
					this.OnColumn_10Changing(value);
					this.SendPropertyChanging();
					this._Column_10 = value;
					this.SendPropertyChanged("Column_10");
					this.OnColumn_10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 11]", Storage="_Column_11", DbType="VarChar(1)")]
		public string Column_11
		{
			get
			{
				return this._Column_11;
			}
			set
			{
				if ((this._Column_11 != value))
				{
					this.OnColumn_11Changing(value);
					this.SendPropertyChanging();
					this._Column_11 = value;
					this.SendPropertyChanged("Column_11");
					this.OnColumn_11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 12]", Storage="_Column_12", DbType="VarChar(1)")]
		public string Column_12
		{
			get
			{
				return this._Column_12;
			}
			set
			{
				if ((this._Column_12 != value))
				{
					this.OnColumn_12Changing(value);
					this.SendPropertyChanging();
					this._Column_12 = value;
					this.SendPropertyChanged("Column_12");
					this.OnColumn_12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 13]", Storage="_Column_13", DbType="VarChar(1)")]
		public string Column_13
		{
			get
			{
				return this._Column_13;
			}
			set
			{
				if ((this._Column_13 != value))
				{
					this.OnColumn_13Changing(value);
					this.SendPropertyChanging();
					this._Column_13 = value;
					this.SendPropertyChanged("Column_13");
					this.OnColumn_13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bar_code", DbType="VarChar(13)")]
		public string Bar_code
		{
			get
			{
				return this._Bar_code;
			}
			set
			{
				if ((this._Bar_code != value))
				{
					this.OnBar_codeChanging(value);
					this.SendPropertyChanging();
					this._Bar_code = value;
					this.SendPropertyChanged("Bar_code");
					this.OnBar_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="VarChar(11)")]
		public string Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column 16]", Storage="_Column_16", DbType="VarChar(1)")]
		public string Column_16
		{
			get
			{
				return this._Column_16;
			}
			set
			{
				if ((this._Column_16 != value))
				{
					this.OnColumn_16Changing(value);
					this.SendPropertyChanging();
					this._Column_16 = value;
					this.SendPropertyChanged("Column_16");
					this.OnColumn_16Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Promet", Storage="_Promets", ThisKey="PLU", OtherKey="ProductId")]
		public EntitySet<Promet> Promets
		{
			get
			{
				return this._Promets;
			}
			set
			{
				this._Promets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Promets(Promet entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_Promets(Promet entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private string _CustomerName;
		
		private EntitySet<Promet> _Promets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    #endregion
		
		public Customer()
		{
			this._Promets = new EntitySet<Promet>(new Action<Promet>(this.attach_Promets), new Action<Promet>(this.detach_Promets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Promet", Storage="_Promets", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<Promet> Promets
		{
			get
			{
				return this._Promets;
			}
			set
			{
				this._Promets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Promets(Promet entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Promets(Promet entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentId;
		
		private string _Name;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Department()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employees", ThisKey="DepartmentId", OtherKey="DepartmentId")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private int _DepartmentId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Employee()
		{
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="DepartmentId", OtherKey="DepartmentId", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._DepartmentId = value.DepartmentId;
					}
					else
					{
						this._DepartmentId = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promet")]
	public partial class Promet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrometId;
		
		private System.DateTime _Created;
		
		private int _Quantity;
		
		private string _Comment;
		
		private decimal _Price;
		
		private short _ProductId;
		
		private System.Nullable<int> _CustomerId;
		
		private EntityRef<Article> _Article;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrometIdChanging(int value);
    partial void OnPrometIdChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnProductIdChanging(short value);
    partial void OnProductIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    #endregion
		
		public Promet()
		{
			this._Article = default(EntityRef<Article>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrometId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PrometId
		{
			get
			{
				return this._PrometId;
			}
			set
			{
				if ((this._PrometId != value))
				{
					this.OnPrometIdChanging(value);
					this.SendPropertyChanging();
					this._PrometId = value;
					this.SendPropertyChanged("PrometId");
					this.OnPrometIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="SmallInt NOT NULL")]
		public short ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Promet", Storage="_Article", ThisKey="ProductId", OtherKey="PLU", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.Promets.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.Promets.Add(this);
						this._ProductId = value.PLU;
					}
					else
					{
						this._ProductId = default(short);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Promet", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Promets.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Promets.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetPrometResult
	{
		
		private int _PrometId;
		
		private System.DateTime _Created;
		
		private int _Quantity;
		
		private string _Comment;
		
		private decimal _Price;
		
		private short _ProductId;
		
		private System.Nullable<int> _CustomerId;
		
		public GetPrometResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrometId", DbType="Int NOT NULL")]
		public int PrometId
		{
			get
			{
				return this._PrometId;
			}
			set
			{
				if ((this._PrometId != value))
				{
					this._PrometId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="SmallInt NOT NULL")]
		public short ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this._CustomerId = value;
				}
			}
		}
	}
	
	public partial class GetArticlesResult
	{
		
		private short _PLU;
		
		private string _Name;
		
		private System.Nullable<decimal> _Price;
		
		private string _Bar_code;
		
		private System.Nullable<decimal> _Stock;
		
		private System.Nullable<System.DateTime> _Updated;
		
		public GetArticlesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLU", DbType="SmallInt NOT NULL")]
		public short PLU
		{
			get
			{
				return this._PLU;
			}
			set
			{
				if ((this._PLU != value))
				{
					this._PLU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(14)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bar_code", DbType="VarChar(13)")]
		public string Bar_code
		{
			get
			{
				return this._Bar_code;
			}
			set
			{
				if ((this._Bar_code != value))
				{
					this._Bar_code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this._Updated = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
